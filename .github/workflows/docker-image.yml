name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Skipping CI
      - name: Check for [skip ci]
        id: skip_check
        run: git log -1 --pretty=%s | grep -iqE '\[skip ci\]|\[ci skip\]'
        continue-on-error: true

      - name: Set skip flag
        run: echo "SKIP_CI=true" >> $GITHUB_ENV
        if: ${{ steps.skip_check.outcome == 'success' }}

      # Install dependencies (Yarn)
      - name: Install dependencies
        run: yarn install
        if: ${{ env.SKIP_CI != 'true' }}

      # Lint and Test
      - name: Lint and Test
        run: yarn lint && yarn test
        if: ${{ env.SKIP_CI != 'true' }}

      # Build Project (Yarn)
      - name: Build Project
        run: yarn build
        if: ${{ env.SKIP_CI != 'true' }}

      # Setup Java 17 (if required for the environment)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # SonarCloud Scan for Yarn-built artifacts
      - name: Run SonarScanner for Yarn build
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.organization=my-project-ironrim \
            -Dsonar.projectKey=my-project-ironrim_sonarqube \
            -Dsonar.sources=./src \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # Build Docker image
      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag trialtab8o4.jfrog.io/my-repo-docker/express-typescript-docker:latest

      # SonarCloud Scan for Docker Image
      - name: Run SonarScanner for Docker image
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          docker run --rm \
            -e SONAR_HOST_URL=https://sonarcloud.io \
            -e SONAR_LOGIN=${{ secrets.SONAR_TOKEN }} \
            -v $GITHUB_WORKSPACE:/mnt/sonar \
            sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey=my-project-ironrim_sonarqube \
            -Dsonar.sources=/mnt/sonar \
            -Dsonar.host.url=https://sonarcloud.io

      # Push Docker image to JFrog Artifactory
      - name: Push Docker Image to JFrog Artifactory
        run: docker push trialtab8o4.jfrog.io/my-repo-docker/express-typescript-docker:latest

      # # Notify Slack (Optional)
      # - name: Notify Slack
      #   uses: rtCamp/action-slack-notify@v2
      #   with:
      #     webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     message: "Deployment of ${{ github.sha }} to production succeeded"
      #     color: good
      #   if: success()
